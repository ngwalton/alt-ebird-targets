<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hotspot Targets</title>
    <link rel="stylesheet"
        href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
        integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
        crossorigin=""/>
    <link rel="stylesheet" href="styles.css">
    <!-- Make sure you put this AFTER Leaflet's CSS -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
        crossorigin=""></script>
    <!-- source: https://github.com/calvinmetcalf/leaflet-ajax/ -->
    <script src="leaflet.ajax.min.js"></script>
</head>
<body>
    <div id="targets_bar">
        <div>
            <a href="javascript:void(0)" class="closebtn"
                onclick="close_targets()">&times;</a>
        </div>
        <div id="targets"></div>
    </div>
    
    <div id="map"></div>

    <script>
        // creates an empty map that is displayed in the div with the
        // corresponding id
        let map = L.map('map', {
            center: [43.0167, -88.783],
            zoom: 11,
            minZoom: 10,
            zoomControl: false
        });

        // open street map base map
        let basemap = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
            attribution:
                '&copy; <a href="http://osm.org/copyright">' +
                    'OpenStreetMap</a> contributors'
        });

        basemap.addTo(map);

        let co_bnds = new L.GeoJSON.AJAX("County_Boundaries_24K.geojson");
        co_bnds.addTo(map);

        // function to parse ebird species object and format as html
        function parse_species(targets_obj) {
            let res = '';
            for (const sp of targets_obj) {
                res += `<p><span class="comName">${sp.comName}</span></br>
                    (<span class="sciName">${sp.sciName}</span>)</p>`;
            };

            return res;
        }

        // function to fetch target species for selected hotspot
        async function get_targets(loc_id) {
            try {
                const res = await fetch(loc_id);
                const targets = await res.json();
                const dest = document.querySelector("#targets");
                dest.innerHTML = parse_species(targets);
            } catch (e) {
                console.log(e);
            } finally {
                console.log("Getting data for: " + loc_id);
            }
        }

        // function to display hotspot name, n species reported, and link to
        // open hotspot targets
        function onEachFeature(feature, layer) {
            let popupContent =
                `<div class="pop-header">
                    <a href="https://ebird.org/hotspot/${feature.properties.locId}"
                        target="_blank">
                        ${feature.properties.locName}
                    </a>
                </div>
                <div class="n-species-obs">
                    <p>Species: ${feature.properties.numSpeciesAllTime}</p>
                </div>
                <div>
                    <button type="button" class="btn btn-light"
                        onclick='get_targets("${feature.properties.locId}");
                        open_targets();'>
                        Target species
                    </button>
                </div>`;

            layer.bindPopup(popupContent);
        }

        // load from ebird servers
        let hotspot_geo = L.geoJSON(<%- hotspot_geo %>,
            {onEachFeature: onEachFeature});
        // load from my server
        // let hotspot_geo = new L.GeoJSON.AJAX("hotspot_list.geojson",
        //     {onEachFeature: onEachFeature});
        hotspot_geo.addTo(map);

        L.control.scale().addTo(map);

        L.control.zoom({position: 'topright'}).addTo(map);
    </script>
    <script>
        function open_targets() {
            document.querySelector("#targets_bar").style.left = "0";
        }
        function close_targets() {
            document.querySelector("#targets_bar").style.left = "-10000px";
        }
    </script>
</body>
</html>
